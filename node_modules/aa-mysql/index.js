var mysql = require('mysql');
var mescape = mysql.escape;
var mescapeId = mysql.escapeId;

// 数据库类
function AAmysql() {
  this._db = {
    host: 'localhost',
    port: 3306,
    user: 'root',
    pass: ''
  }
  this._conn = {};
  this.escape = mysql.escape;
  this.escapeId = mysql.escapeId;
}

// 数据库客户端
function AAmysqlQuery() {
  this._sql = {};
}

var aamysql = module.exports = new AAmysql();

/*
 * 数据库信息
 */

// 配置数据库
AAmysql.prototype.config = function(obj) {
  if (typeof obj != 'object')
    return;
  for (var i in obj) {
    var isin = false;
    for (var j in this._db) {
      if (i == j) {
        isin = true;
        break;
      }
    }
    if (isin) {
      this._db[i] = obj[i];
    }
  }
};

// 连接数据库
AAmysql.prototype.connect = function(callback) {
  this._conn = mysql.createConnection({
    host: this._db.host,
    port: this._db.port,
    user: this._db.user,
    password: this._db.pass,
  });
  this._conn.connect(function(err) {
    if (typeof callback == 'function') {
      callback(err);
    }
    else
    if (err) {
      console.log('ERROR: aa-mysql connect error.');
      console.log(err);
    }
  });
};

// 选择数据库
AAmysql.prototype.use = function(name) {
  this._conn.query('USE `' + name + '`', function(err) {
    if (err) {
      console.log('ERROR: aa-mysql use ' + name + ' error.');
      console.log(err);
    }
  });
}

// 选择数据表
AAmysql.prototype.table = function(str) {
  var query = new AAmysqlQuery();
  if (typeof str == 'string') {
      query._sql.table = str;
      query._sql.tableStr = str;
  }
  return query;
}

/*
 * 附加条件
 */


// 字段设置
AAmysqlQuery.prototype.field = function(arr) {
  if (typeof arr == 'object') {
    this._sql.field = arr;
    this._sql.fieldStr = '';
    for (var i = 0; i < arr.length; i++) {
      if (i != 0)
        this._sql.fieldStr += ', ';
      this._sql.fieldStr += arr[i];
    }
  }
  return this;
}

// 条件设置
// TODO: 添加 OR 和 NOT
AAmysqlQuery.prototype.where = function(obj) {
  if (typeof obj == 'object') {
    this._sql.where = obj;
    this._sql.whereStr = '';
    var flag = false;
    for (var i in obj) {
      if (flag)
        this._sql.whereStr += ' AND ';
      else
        flag = true;
      if (typeof obj[i] == 'object') {
        this._sql.whereStr += mescapeId(i) + ' ' + obj[i][0] + ' ' + mescape(obj[i][1]);
      } else {
        this._sql.whereStr += mescapeId(i) + ' = ' + mescape(obj[i]);
      }
    }
  }
  if (typeof obj == 'string') {
    this._sql.whereStr = obj;
  }
  return this;
}

// 排序设置
AAmysqlQuery.prototype.order = function(arr) {
  if (typeof arr == 'object') {
    this._sql.order = arr;
    this._sql.orderStr = '';
    for (var i = 0; i < arr.length; i += 2) {
      if (i != 0)
          this._sql.orderStr += ', ';
      this._sql.orderStr += arr[i] + ' ' + arr[i+1];
    }
  }
  return this;
}

// 排序设置
AAmysqlQuery.prototype.limit = function(offset, rows) {
  if (typeof rows != 'number') {
    rows = offset;
    offset = null;
  }
  this._sql.limitStr = '';
  if (typeof offset == 'number') {
    this._sql.offset = offset;
    this._sql.limitStr += offset + ', ';
  }
  if (typeof rows == 'number') {
    this._sql.rows = rows;
    this._sql.limitStr += rows;
  }
  return this;
}


/*
 * 数据库SELECT操作
 *
 * @param object 过滤条件
 * @param object 
 * @param function 
 *
 * @return object 
 */
AAmysqlQuery.prototype.select = function(option, callback) {
  if (typeof option == 'function') {
    callback = option;
    option = null;
  }

  if (option) {
    if (option.find) {
      this._sql.limitStr = '1';
    }
  }

  this._sql.final = 'SELECT ';
  if (this._sql.fieldStr)
    this._sql.final += this._sql.fieldStr;
  else
    this._sql.final += '*';
  this._sql.final += ' FROM ';
  this._sql.final += this._sql.tableStr;
  if (this._sql.whereStr) {
    this._sql.final += ' WHERE ';
    this._sql.final += this._sql.whereStr;
  }
  if (this._sql.orderStr) {
    this._sql.final += ' ORDER BY ';
    this._sql.final += this._sql.orderStr;
  }
  if (this._sql.limitStr) {
    this._sql.final += ' LIMIT ';
    this._sql.final += this._sql.limitStr;
  }
  this._sql.final += ';';

  this._exec(option, callback);
}

// 筛选一条数据
AAmysqlQuery.prototype.find = function(option, callback) {
  if (typeof option == 'function') {
    callback = option;
    option = {};
  }
  option.find = 1;
  this.select(option, callback);
}

// 删除
AAmysqlQuery.prototype.delete = function(option, callback) {
  if (typeof option == 'function') {
    callback = option;
    option = null;
  }

  this._sql.final = 'DELETE FROM ';
  this._sql.final += this._sql.tableStr;
  this._sql.final += ' WHERE '
  this._sql.final += this._sql.whereStr;
  this._sql.final += ';';

  this._exec(option, callback);
}

// 插入
AAmysqlQuery.prototype.insert = function(data, option, callback) {
  if (!data) {
    if (typeof callback == 'function')
      callback('ERROR: sql require data', null);
    return;
  }
  if (typeof option == 'function') {
    callback = option;
    option = null;
  }
  if (data.length == null)
    data = [data];

  this._sql.final = 'INSERT INTO ';
  this._sql.final += this._sql.tableStr;
  this._sql.final += ' (';
  var  flag = false;
  for (var i in data[0]) {
    if (flag)
      this._sql.final += ', ';
    else
      flag = true;
    this._sql.final += i;
  }
  this._sql.final += ') ';
  this._sql.final += 'VALUES ';
  for (var i = 0; i < data.length; i++) {
    if (i != 0)
      this._sql.final += ', ';
    var flag = false;
    this._sql.final += '(';
    for (var j in data[0]) {
      if (flag)
        this._sql.final += ', ';
      else
        flag = true;
      this._sql.final += mescape(data[i][j]);
    }
    this._sql.final += ')';
  }
  this._sql.final += ';';

  this._exec(option, callback);
}

// 更改
AAmysqlQuery.prototype.update = function(data, option, callback) {
  if (!data) {
    if (typeof callback == 'function')
      callback('ERROR: sql require data', null);
    return;
  }
  if (typeof option == 'function') {
    callback = option;
    option = null;
  }

  this._sql.final = 'UPDATE ';
  this._sql.final += this._sql.tableStr;
  this._sql.final += ' SET '
  if (typeof data == 'object') {
    var flag = false;
    for (var i in data) {
      if (flag)
        this._sql.final += ', ';
      else
        flag = true;
      this._sql.final += i + ' = ' + mescape(data[i]);
    }
  } else {
    this._sql.final += data;
  }
  this._sql.final += ' WHERE '
  this._sql.final += this._sql.whereStr;
  this._sql.final += ';';

  this._exec(option, callback);
}


// 执行查询
AAmysqlQuery.prototype._exec = function(option, callback) {
  if (option) {
    if (option.explain)
      this._sql.final = 'EXPLAIN ' + this._sql;
    if (option.outSql) {
      console.log(this._sql.final);
      return;
    }
    if (option.getSql) {
      return this._sql.final;
    }
  }

  var self = this;
  aamysql._conn.query(this._sql.final, function(err, data) {
    if (typeof callback == 'function') {
      if (!err && option && option.find)
        callback(err, data[0])
      else
        callback(err, data);
    }
    else
    if (err) {
      console.log('ERROR: aa-mysql sql error.');
      console.log('SQL: ' + self._sql.final);
      console.log(err);
    }
  });
}

// 测试
/*
var aa = new AAmysql();
aa.connect({pass: '123'});
aa.use('aa-blog');
aa.table('aa_post').field(['id']).where([
  ['id', '>=', 1]
]).order(['id', 'DESC']).find(function(err, data) {
  console.log(data);
});
aa.table('aa_post').insert([
  {alias: 'gdsag', title: 'sdafdsaf'},
  {alias: "45f6", title: '123'},
]);
aa.table('aa_post').where({id: 1}).update({
  alias: '111',
  title: '222'
});
console.log(aa._sql);
aa.table('aa_post').where({id: 1}).delete({outSql: 1});
*/

